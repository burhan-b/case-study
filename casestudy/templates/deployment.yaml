apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "casestudy.fullname" . }}
  labels:
    {{- include "casestudy.labels" . | nindent 4 }}
spec:
  {{- if not .Values.autoscaling.enabled }}
  replicas: {{ .Values.replicaCount }}
  {{- end }}
  selector:
    matchLabels:
      {{- include "casestudy.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      {{- with .Values.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        {{- include "casestudy.selectorLabels" . | nindent 8 }}
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "casestudy.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      containers:
        - name: {{ .Chart.Name }}
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          ports:
            - name: http
              containerPort: 80
              protocol: TCP
          livenessProbe:
            httpGet:
              path: /
              port: http
          readinessProbe:
            httpGet:
              path: /
              port: http
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
        - name: {{ .Values.logging.fluentBit.name }}
          image: {{ .Values.logging.fluentBit.image }}:{{ .Values.logging.fluentBit.imageVersion }}
          imagePullPolicy: IfNotPresent
          resources:
            limits:
              memory: {{ .Values.logging.fluentBit.resources.limits.memory | quote }}
              cpu: {{ .Values.logging.fluentBit.resources.limits.cpu | quote }}
            requests:
              memory: {{ .Values.logging.fluentBit.resources.requests.memory | quote }}
              cpu: {{ .Values.logging.fluentBit.resources.requests.cpu | quote }}
          env:
          - name: LOGSTASH_PREFIX
            value: "{{ .Values.logging.fluentBit.logStashPrefix }}"
          - name: ELASTICSEARCH_HOST
            value: "{{ .Values.logging.fluentBit.elasticSearchHost }}"
          - name: ELASTICSEARCH_PORT
            value: "{{ .Values.logging.fluentBit.elasticSearchPort }}"
          - name: ENV
            value: "{{ .Values.logging.fluentBit.env }}"
          ports:
            - containerPort: {{ .Values.logging.fluentBit.ports.containerPort }}
          volumeMounts:
            - name: applog
              mountPath: /var/log
            - name: fluent-bit-config
              mountPath: /fluent-bit/etc/
        volumes:
          - name: {{ .Values.configMap.name }}
            configMap:
              name: {{ .Values.configMap.name }}
          - name: applog
            emptyDir: {}
          - name: fluent-bit-config
            configMap:
              name: fluent-bit-config
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
